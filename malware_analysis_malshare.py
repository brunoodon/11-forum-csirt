import requests
import json
import hashlib
import sys
from virus_total_apis import PublicApi as VirusTotalPublicApi
from pymisp import (MISPEvent, MISPSighting, MISPTag, MISPOrganisation, MISPObject)
from pymisp import MISPEvent, MISPObject, PyMISP, ExpandedPyMISP, MISPSharingGroup
import requests
import sys
import datetime
import json
import os
from dotenv import load_dotenv
vt_api_key = 'dc3798d6c98f2a86cffecc741200bcf4d980687190e1d12d63842aabebba3db0'
today=str(datetime.date.today())
hash_api_key = '4adb38b3b0a2f024223c4249ae77773a886548b54d290e08c74343d3c4caf89a'
url_hash = f'https://malshare.com/api.php?api_key={hash_api_key}&action=getlist'
r_hash = requests.get(url_hash)
r_json = json.loads(r_hash.text)
misp_url = "https://misp.brunoodon.com.br"
key = '73RhcpLzFq38Ts5vLO0xhlcF4zEbRFJih8iRiKdw'
misp_verifycert = False
misp = ExpandedPyMISP(misp_url, key, misp_verifycert)
event = MISPEvent()
event.info = "Malware Analysis - File Hashes - Malshare - "+today+""
event.analysis = "2"
event.published = True
event.distribution = "3"
#event.sharing_group_id = "3"
#event.threat_level_id = "1"
event.add_tag('tlp:clear')
event.add_tag('Malware')
event.add_tag('malicious')
#print(r_json)
try:
  for a in r_json:
    md5 = a['md5']
    sha1 = a['sha1']
    sha256 = a['sha256']
    vt = VirusTotalPublicApi(vt_api_key)
    response_md5 = vt.get_file_report(md5)
    response_sha1 = vt.get_file_report(sha1)
    response_sha256 = vt.get_file_report(sha256)
    json_doc_md5 = json.dumps(response_md5, sort_keys=False, indent=1)
    json_doc_sha1 = json.dumps(response_sha1, sort_keys=False, indent=1)
    json_doc_sha256 = json.dumps(response_sha256, sort_keys=False, indent=1)
#      print(json_doc)
    try:
    #inserindo os MD5
      for x in json.loads(json_doc_md5)['results']['scans']:
        threat_name = json.loads(json_doc_md5)['results']['scans'][''+x+'']['result']
        if threat_name != None:
          print(threat_name)
          event.add_attribute('md5', str(md5), disable_correlation=True, to_ids=False)
          event.add_attribute_tag(""+str(x)+":"+str(threat_name)+"", str(md5))
      for x in json.loads(json_doc_sha1)['results']['scans']:
        threat_name = json.loads(json_doc_sha1)['results']['scans'][''+x+'']['result']
        if threat_name != None:
          print(threat_name)
          event.add_attribute('sha1', str(sha1), disable_correlation=True, to_ids=False)
          event.add_attribute_tag(""+str(x)+":"+str(threat_name)+"", str(sha1))
      for x in json.loads(json_doc_sha256)['results']['scans']:
        threat_name = json.loads(json_doc_sha256)['results']['scans'][''+x+'']['result']
        if threat_name != None:
          print(threat_name)
          event.add_attribute('sha256', str(sha256), disable_correlation=True, to_ids=False)
          event.add_attribute_tag(""+str(x)+":"+str(threat_name)+"", str(sha256))
    except:
      print('Não tem resultado do VT')
except:
  print('Não tem resultado do Malshare')
event = misp.add_event(event)
